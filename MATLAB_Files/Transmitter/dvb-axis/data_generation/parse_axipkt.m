function [parsed_pkt] = parse_axipkt(axipkt_in, ...
                                    frm_bits, pkt_bits, pl_cnt_bits, ...
                                    frameEnd_pos, frameStart_pos, pktEnd_pos, pktStart_pos)
%PARSE_AXIPKT Parses control fields and payload data generated by gendata.m
%   
arguments
    axipkt_in (1,:) uint32 % 32bit axi TData
        
    % Marker bit settings
    frm_bits        (1,1) = 1;
    pkt_bits        (1,1) = 2;
    pl_cnt_bits    (1,1) = 5;

    % Control Signal bit positions
    frameEnd_pos    (1,1) = 3;
    frameStart_pos  (1,1) = 2;
    pktEnd_pos      (1,1) = 1;
    pktStart_pos    (1,1) = 0;
end
    pkt_struct = struct( ...
                    "Frame_Count",  uint32(0),...
                    "Packet_Count", uint32(0),...
                    "Byte_Count",   uint32(0),...
                    ...
                    "Frame_End",    logical(0),...
                    "Frame_Start",  logical(0),...
                    "Packet_End",   logical(0),...
                    "Packet_Start", logical(0)...
                        );
    pkt_struct_arr = repelem(pkt_struct,length(axipkt_in));
    
    % Bit Masks
    frameEnd_mask   = 2^frameEnd_pos;
    frameStart_mask = 2^frameStart_pos;
    pktEnd_mask     = 2^pktEnd_pos;
    pktStart_mask   = 2^pktStart_pos;

    frm_mask        = bitshift(...
                        (2^frm_bits)-1,...
                        pkt_bits + pl_cnt_bits...
                        );
    pkt_mask        = bitshift(...
                        (2^pkt_bits)-1,...
                        pl_cnt_bits...
                        );
    pl_cnt_mask       = (2^5)-1;

    payload_mask    = bitshift( ...
                        (2^8)-1,...
                        4 ...
                        );
                            
    
    for pkt_it = 1:length(axipkt_in)
        % Setup loop variables
        axipkt = axipkt_in(pkt_it);
        pkt_struct_temp = pkt_struct;
        
        % Get payload byte
        payload_startpos = 4; % Flags always 4 bits
        payload = bitshift(...
                    bitand(axipkt,  payload_mask),...
                    payload_startpos*-1 ...
                  );
        % Get payload byte counts
        pkt_struct_temp.("Frame_Count") = bitshift(...
                                bitand(payload,frm_mask),...
                                -1*(pkt_bits+pl_cnt_bits)...
                                );
                           
        pkt_struct_temp.("Packet_Count") = bitshift(...
                                bitand(payload,pkt_mask),...
                                -1*(pl_cnt_bits)...
                                );
        pkt_struct_temp.("Byte_Count") = bitand(payload,pl_cnt_mask);
        
        % Flags 
        pkt_struct_temp.("Frame_End") = logical(bitshift(...
                            bitand(axipkt,  frameEnd_mask),...
                            frameEnd_pos*-1 ...
                            ));
        pkt_struct_temp.("Frame_Start") = logical(bitshift(...
                            bitand(axipkt,  frameStart_mask),...
                            frameStart_pos*-1 ...
                            ));
        pkt_struct_temp.("Packet_End") = logical(bitshift(...
                            bitand(axipkt,  pktEnd_mask),...
                            pktEnd_pos*-1 ...
                            ));
        pkt_struct_temp.("Packet_Start") = logical(bitshift(...
                            bitand(axipkt,  pktStart_mask),...
                            pktStart_pos*-1 ...
                            ));
        
        % Store result
        pkt_struct_arr(pkt_it) = pkt_struct_temp;
    end
    parsed_pkt = pkt_struct_arr;
end

